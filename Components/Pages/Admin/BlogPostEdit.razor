@page "/admin/blogposts/new"
@page "/admin/blogposts/{Id}"

@attribute [Authorize]

@inject IBlogApi _api
@inject IBlogNotificationService _notificationService
@inject IBrowserStorage _storage
@inject NavigationManager _manager

<EditForm Model="Post" OnValidSubmit="SavePost">
    <DataAnnotationsValidator />
    <CustomCssClassProvider TProviderType="BootstrapFieldCssClassProvider" />
    <BlogNavigationLock @ref="NavigationLock" />
    <InputText @bind-Value="Post.Title" />
    <ValidationMessage For="()=>Post.Title" />
    <InputDate @bind-Value="Post.PublishDate" />
    <ValidationMessage For="()=>Post.PublishDate" />
    <InputSelect @bind-Value="selectedCategory">
        <option value="0" disabled>None selected</option>
        @foreach( Category category in Categories )
        {
            <option value="@category.Id">@category.Name</option>
        }
    </InputSelect>
    <ul>
        @foreach( Tag tag in Tags )
        {
            <li>
                @tag.Name
                @if( Post.Tags.Any( t => t.Id == tag.Id ) )
                {
                    <button type="button" @onclick="@(() => {Post.Tags.Remove(Post.Tags.Single(t=>t.Id==tag.Id)); })">Remove</button>
                }
                else
                {
                    <button type="button" @onclick="@(()=> { Post.Tags.Add(tag); })">Add</button>
                }
            </li>
        }
    </ul>
    <InputTextAreaOnInput @bind-Value="Post.Text" @onkeyup="UpdateHTMLAsync" />
    <ValidationMessage For="()=>Post.Text" />
    <button type="submit" class="btn btn-success">Save</button>
</EditForm>

@((MarkupString)markDownAsHTML)


