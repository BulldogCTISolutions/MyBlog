@page "/"

@using Data.Models.Models
@using Data.Models.Interfaces

@inject IBlogApi _api

<ul>
    <Virtualize ItemsProvider="LoadPosts" Context="p">
        <li><a href="/Post/@p.Id">@p.Title</a></li>
    </Virtualize>
</ul>


@code
{
    public int totalNumberOfBlogPosts { get; set; }

    private async ValueTask<ItemsProviderResult<BlogPost>> LoadPosts( ItemsProviderRequest request )
    {
        if( totalNumberOfBlogPosts == 0 )
        {
            totalNumberOfBlogPosts = await _api.GetBlogPostCountAsync().ConfigureAwait(false);
        }
        int fetchThisManyBlogPosts = Math.Min( request.Count, totalNumberOfBlogPosts - request.StartIndex );
        List<BlogPost> blogposts = (await _api.GetBlogPostsAsync( fetchThisManyBlogPosts, request.StartIndex )
                                              .ConfigureAwait(false))!; //Will at least return an empty list
        return new ItemsProviderResult<BlogPost>( blogposts, totalNumberOfBlogPosts );
    }
}
